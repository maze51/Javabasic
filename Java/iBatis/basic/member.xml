<?xml version="1.0" encoding="UTF-8"?>
<!-- 이 문서는 SQL문을 직접 처리할 수 있는 내용을 기술하는 문서입니다. -->
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- 
	namespace속성 : 아래에서 작성한 SQL문을 호출할 때 같이 사용한다.
 -->
<sqlMap namespace="mymember">
	<!-- 
		개별 sql문 처리 문서에서 사용할 typeAlias를 지정할 수 있다.
	 -->
	 <typeAlias alias="memVo" type="basic.MemberVO"/>
	 <!-- basic/MemberVO 대신 memVo를 쓰겠다는 의미. 만들고 안 써도 무방하다 -->
	 
	<!-- 
		이 영역에 SQL문에 맞는 태그를 사용하여 처리할 SQL문을 기술한다.
		
		사용할 수 있는 기본적인 태그들(더 있다)
		<select> ~~~ </select>
		<insert> ~~~ </insert>
		<update> ~~~ </update>
		<delete> ~~~ </delete>
		
	======================================================
	위 태그에서 사용되는 속성들
	1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace속성값과
				같이 연결하여 사용하는 이름
	2) parameterClass속성 : sql문에 사용될 데이터가 들어있는 객체를 지정한다.
				(보통 VO클래스, 자바의 자료형이름 등이 사용된다)
	3) resultClass속성 : select문을 실행한 결과를 담을 객체를 지정한다.
				(보통 VO클래스, 자바의 자료형이름 등이 사용된다)
	 -->
	 <insert id="insertMember" parameterClass="basic.MemberVO">
	 	insert into mymember (mem_id, mem_name, mem_tel, mem_addr)
	 	values (#mem_id#, #mem_name#, #mem_tel#, #mem_addr#)
	 </insert>
	 
	 <!-- parameterClass나 ResultClass에 alias로 설정할 수 있다. -->
	 <update id="updateMember" parameterClass="memVo">
	 	update mymember set mem_name=#mem_name#,
	 		mem_tel=#mem_tel#, mem_addr=#mem_addr#
	 	where mem_id=#mem_id# 
	 </update>
	 
	 <!--
	 	데이터가 하나뿐일 때는 parameterClass에 string처럼 쓸 수 있다 
	 	parameterClass에 설정되는 값이 단일값(1개의 데이터)이면
	 	SQL문에 이 값을 나타내는 변수는 특별히 이름이 정해지지 않았다.
	 	즉, 사용자가 임의로 지정할 수 있다.
	 -->
	 <delete id="deleteMember" parameterClass="string">
<!-- 	 	delete from mymember where mem_id=#mem_id# -->
	 	delete from mymember where mem_id=#dddd#
	 </delete>
	 
	 <select id="getAllMember" resultClass="basic.MemberVO">
	 	select * from mymember order by mem_id
	 </select>
	 
	 <select id="getMember" resultClass="memVo" parameterClass="string">
	 	select * from mymember where mem_id=#mem_id#
	 </select>
</sqlMap>
